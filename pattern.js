// Generated by CoffeeScript 1.7.1
(function() {
  var pattern;

  pattern = function(pattern_str) {
    var ESCAPE, escape, parse, parses, query, statment, term, terms, _i, _len, _ref;
    ESCAPE = ['\\', '[', ']', '.', '^', '$', '|', '?', '*', '+', '(', ')', '{', '}'];
    escape = function(str) {
      var e, _i, _len;
      for (_i = 0, _len = ESCAPE.length; _i < _len; _i++) {
        e = ESCAPE[_i];
        str = str.replace(e, "\\" + e);
      }
      return str;
    };
    parse = function(statment) {
      var _attrs, _p, _r;
      _p = /%(\w+)%/g;
      _attrs = (function() {
        var _results;
        _results = [];
        while (_r = _p.exec(statment)) {
          _results.push(_r[1]);
        }
        return _results;
      })();
      return {
        attributes: _attrs,
        toExtract: function(attribute) {
          _r = escape(statment).replace("%" + attribute + "%", "(?<value>\\w+)");
          return _r.replace(_p, '\\w+');
        },
        toFilter: function() {
          return escape(statment).replace(_p, '\\w+');
        }
      };
    };
    terms = [];
    parses = [];
    _ref = pattern_str.split('|');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      statment = _ref[_i];
      statment = statment.trim();
      if (statment.indexOf('parse') === 0) {
        parses.push(parse(statment.substring(5).trim()));
      } else {
        terms = terms.concat(statment.split(/\s+/));
      }
    }
    query = {
      'bool': {
        'must': (function() {
          var _j, _len1, _results;
          _results = [];
          for (_j = 0, _len1 = terms.length; _j < _len1; _j++) {
            term = terms[_j];
            _results.push({
              'multi_match': {
                'query': term,
                'fields': ['_all']
              }
            });
          }
          return _results;
        })()
      }
    };
    return {
      query: query,
      parses: parses,
      applyFilter: function(attribute, value) {
        return pattern(pattern_str.replace("%" + attribute + "%", value));
      }
    };
  };

}).call(this);
